import{r as d,bw as j}from"./index-B1IYvx0M.js";var X=e=>typeof e!="string"?{}:e.split(/ ?; ?/).reduce((t,n)=>{const[r,o]=n.split(/ ?: ?/).map((l,s)=>s===0?l.replace(/\s+/g,""):l.trim());if(r&&o){const l=r.replace(/(\w)-(\w)/g,(a,u,i)=>`${u}${i.toUpperCase()}`);let s=o.trim();Number.isNaN(Number(o))||(s=Number(o)),t[r.startsWith("-")?r:l]=s}return t},{});function Y(e=6){const t="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";let n="";for(let r=e;r>0;--r)n+=t[Math.round(Math.random()*(t.length-1))];return n}var W=["br","col","colgroup","dl","hr","iframe","img","input","link","menuitem","meta","ol","param","select","table","tbody","tfoot","thead","tr","ul","wbr"],U={"accept-charset":"acceptCharset",acceptcharset:"acceptCharset",accesskey:"accessKey",allowfullscreen:"allowFullScreen",autocapitalize:"autoCapitalize",autocomplete:"autoComplete",autocorrect:"autoCorrect",autofocus:"autoFocus",autoplay:"autoPlay",autosave:"autoSave",cellpadding:"cellPadding",cellspacing:"cellSpacing",charset:"charSet",class:"className",classid:"classID",classname:"className",colspan:"colSpan",contenteditable:"contentEditable",contextmenu:"contextMenu",controlslist:"controlsList",crossorigin:"crossOrigin",dangerouslysetinnerhtml:"dangerouslySetInnerHTML",datetime:"dateTime",defaultchecked:"defaultChecked",defaultvalue:"defaultValue",enctype:"encType",for:"htmlFor",formmethod:"formMethod",formaction:"formAction",formenctype:"formEncType",formnovalidate:"formNoValidate",formtarget:"formTarget",frameborder:"frameBorder",hreflang:"hrefLang",htmlfor:"htmlFor",httpequiv:"httpEquiv","http-equiv":"httpEquiv",icon:"icon",innerhtml:"innerHTML",inputmode:"inputMode",itemid:"itemID",itemprop:"itemProp",itemref:"itemRef",itemscope:"itemScope",itemtype:"itemType",keyparams:"keyParams",keytype:"keyType",marginwidth:"marginWidth",marginheight:"marginHeight",maxlength:"maxLength",mediagroup:"mediaGroup",minlength:"minLength",nomodule:"noModule",novalidate:"noValidate",playsinline:"playsInline",radiogroup:"radioGroup",readonly:"readOnly",referrerpolicy:"referrerPolicy",rowspan:"rowSpan",spellcheck:"spellCheck",srcdoc:"srcDoc",srclang:"srcLang",srcset:"srcSet",tabindex:"tabIndex",typemustmatch:"typeMustMatch",usemap:"useMap",accentheight:"accentHeight","accent-height":"accentHeight",alignmentbaseline:"alignmentBaseline","alignment-baseline":"alignmentBaseline",allowreorder:"allowReorder",arabicform:"arabicForm","arabic-form":"arabicForm",attributename:"attributeName",attributetype:"attributeType",autoreverse:"autoReverse",basefrequency:"baseFrequency",baselineshift:"baselineShift","baseline-shift":"baselineShift",baseprofile:"baseProfile",calcmode:"calcMode",capheight:"capHeight","cap-height":"capHeight",clippath:"clipPath","clip-path":"clipPath",clippathunits:"clipPathUnits",cliprule:"clipRule","clip-rule":"clipRule",colorinterpolation:"colorInterpolation","color-interpolation":"colorInterpolation",colorinterpolationfilters:"colorInterpolationFilters","color-interpolation-filters":"colorInterpolationFilters",colorprofile:"colorProfile","color-profile":"colorProfile",colorrendering:"colorRendering","color-rendering":"colorRendering",contentscripttype:"contentScriptType",contentstyletype:"contentStyleType",diffuseconstant:"diffuseConstant",dominantbaseline:"dominantBaseline","dominant-baseline":"dominantBaseline",edgemode:"edgeMode",enablebackground:"enableBackground","enable-background":"enableBackground",externalresourcesrequired:"externalResourcesRequired",fillopacity:"fillOpacity","fill-opacity":"fillOpacity",fillrule:"fillRule","fill-rule":"fillRule",filterres:"filterRes",filterunits:"filterUnits",floodopacity:"floodOpacity","flood-opacity":"floodOpacity",floodcolor:"floodColor","flood-color":"floodColor",fontfamily:"fontFamily","font-family":"fontFamily",fontsize:"fontSize","font-size":"fontSize",fontsizeadjust:"fontSizeAdjust","font-size-adjust":"fontSizeAdjust",fontstretch:"fontStretch","font-stretch":"fontStretch",fontstyle:"fontStyle","font-style":"fontStyle",fontvariant:"fontVariant","font-variant":"fontVariant",fontweight:"fontWeight","font-weight":"fontWeight",glyphname:"glyphName","glyph-name":"glyphName",glyphorientationhorizontal:"glyphOrientationHorizontal","glyph-orientation-horizontal":"glyphOrientationHorizontal",glyphorientationvertical:"glyphOrientationVertical","glyph-orientation-vertical":"glyphOrientationVertical",glyphref:"glyphRef",gradienttransform:"gradientTransform",gradientunits:"gradientUnits",horizadvx:"horizAdvX","horiz-adv-x":"horizAdvX",horizoriginx:"horizOriginX","horiz-origin-x":"horizOriginX",imagerendering:"imageRendering","image-rendering":"imageRendering",kernelmatrix:"kernelMatrix",kernelunitlength:"kernelUnitLength",keypoints:"keyPoints",keysplines:"keySplines",keytimes:"keyTimes",lengthadjust:"lengthAdjust",letterspacing:"letterSpacing","letter-spacing":"letterSpacing",lightingcolor:"lightingColor","lighting-color":"lightingColor",limitingconeangle:"limitingConeAngle",markerend:"markerEnd","marker-end":"markerEnd",markerheight:"markerHeight",markermid:"markerMid","marker-mid":"markerMid",markerstart:"markerStart","marker-start":"markerStart",markerunits:"markerUnits",markerwidth:"markerWidth",maskcontentunits:"maskContentUnits",maskunits:"maskUnits",numoctaves:"numOctaves",overlineposition:"overlinePosition","overline-position":"overlinePosition",overlinethickness:"overlineThickness","overline-thickness":"overlineThickness",paintorder:"paintOrder","paint-order":"paintOrder","panose-1":"panose1",pathlength:"pathLength",patterncontentunits:"patternContentUnits",patterntransform:"patternTransform",patternunits:"patternUnits",pointerevents:"pointerEvents","pointer-events":"pointerEvents",pointsatx:"pointsAtX",pointsaty:"pointsAtY",pointsatz:"pointsAtZ",preservealpha:"preserveAlpha",preserveaspectratio:"preserveAspectRatio",primitiveunits:"primitiveUnits",refx:"refX",refy:"refY",renderingintent:"renderingIntent","rendering-intent":"renderingIntent",repeatcount:"repeatCount",repeatdur:"repeatDur",requiredextensions:"requiredExtensions",requiredfeatures:"requiredFeatures",shaperendering:"shapeRendering","shape-rendering":"shapeRendering",specularconstant:"specularConstant",specularexponent:"specularExponent",spreadmethod:"spreadMethod",startoffset:"startOffset",stddeviation:"stdDeviation",stitchtiles:"stitchTiles",stopcolor:"stopColor","stop-color":"stopColor",stopopacity:"stopOpacity","stop-opacity":"stopOpacity",strikethroughposition:"strikethroughPosition","strikethrough-position":"strikethroughPosition",strikethroughthickness:"strikethroughThickness","strikethrough-thickness":"strikethroughThickness",strokedasharray:"strokeDasharray","stroke-dasharray":"strokeDasharray",strokedashoffset:"strokeDashoffset","stroke-dashoffset":"strokeDashoffset",strokelinecap:"strokeLinecap","stroke-linecap":"strokeLinecap",strokelinejoin:"strokeLinejoin","stroke-linejoin":"strokeLinejoin",strokemiterlimit:"strokeMiterlimit","stroke-miterlimit":"strokeMiterlimit",strokewidth:"strokeWidth","stroke-width":"strokeWidth",strokeopacity:"strokeOpacity","stroke-opacity":"strokeOpacity",suppresscontenteditablewarning:"suppressContentEditableWarning",suppresshydrationwarning:"suppressHydrationWarning",surfacescale:"surfaceScale",systemlanguage:"systemLanguage",tablevalues:"tableValues",targetx:"targetX",targety:"targetY",textanchor:"textAnchor","text-anchor":"textAnchor",textdecoration:"textDecoration","text-decoration":"textDecoration",textlength:"textLength",textrendering:"textRendering","text-rendering":"textRendering",underlineposition:"underlinePosition","underline-position":"underlinePosition",underlinethickness:"underlineThickness","underline-thickness":"underlineThickness",unicodebidi:"unicodeBidi","unicode-bidi":"unicodeBidi",unicoderange:"unicodeRange","unicode-range":"unicodeRange",unitsperem:"unitsPerEm","units-per-em":"unitsPerEm",unselectable:"unselectable",valphabetic:"vAlphabetic","v-alphabetic":"vAlphabetic",vectoreffect:"vectorEffect","vector-effect":"vectorEffect",vertadvy:"vertAdvY","vert-adv-y":"vertAdvY",vertoriginx:"vertOriginX","vert-origin-x":"vertOriginX",vertoriginy:"vertOriginY","vert-origin-y":"vertOriginY",vhanging:"vHanging","v-hanging":"vHanging",videographic:"vIdeographic","v-ideographic":"vIdeographic",viewbox:"viewBox",viewtarget:"viewTarget",vmathematical:"vMathematical","v-mathematical":"vMathematical",wordspacing:"wordSpacing","word-spacing":"wordSpacing",writingmode:"writingMode","writing-mode":"writingMode",xchannelselector:"xChannelSelector",xheight:"xHeight","x-height":"xHeight",xlinkactuate:"xlinkActuate","xlink:actuate":"xlinkActuate",xlinkarcrole:"xlinkArcrole","xlink:arcrole":"xlinkArcrole",xlinkhref:"xlinkHref","xlink:href":"xlinkHref",xlinkrole:"xlinkRole","xlink:role":"xlinkRole",xlinkshow:"xlinkShow","xlink:show":"xlinkShow",xlinktitle:"xlinkTitle","xlink:title":"xlinkTitle",xlinktype:"xlinkType","xlink:type":"xlinkType",xmlbase:"xmlBase","xml:base":"xmlBase",xmllang:"xmlLang","xml:lang":"xmlLang","xml:space":"xmlSpace",xmlnsxlink:"xmlnsXlink","xmlns:xlink":"xmlnsXlink",xmlspace:"xmlSpace",ychannelselector:"yChannelSelector",zoomandpan:"zoomAndPan",onblur:"onBlur",onchange:"onChange",onclick:"onClick",oncontextmenu:"onContextMenu",ondoubleclick:"onDoubleClick",ondrag:"onDrag",ondragend:"onDragEnd",ondragenter:"onDragEnter",ondragexit:"onDragExit",ondragleave:"onDragLeave",ondragover:"onDragOver",ondragstart:"onDragStart",ondrop:"onDrop",onerror:"onError",onfocus:"onFocus",oninput:"onInput",oninvalid:"onInvalid",onkeydown:"onKeyDown",onkeypress:"onKeyPress",onkeyup:"onKeyUp",onload:"onLoad",onmousedown:"onMouseDown",onmouseenter:"onMouseEnter",onmouseleave:"onMouseLeave",onmousemove:"onMouseMove",onmouseout:"onMouseOut",onmouseover:"onMouseOver",onmouseup:"onMouseUp",onscroll:"onScroll",onsubmit:"onSubmit",ontouchcancel:"onTouchCancel",ontouchend:"onTouchEnd",ontouchmove:"onTouchMove",ontouchstart:"onTouchStart",onwheel:"onWheel"};function K(e,t){var l;const{key:n,level:r,...o}=t;switch(e.nodeType){case 1:return d.createElement(J(e.nodeName),Z(e,n),q(e.childNodes,r,o));case 3:{const s=((l=e.nodeValue)==null?void 0:l.toString())??"";if(!o.allowWhiteSpaces&&/^\s+$/.test(s)&&!/[\u00A0\u202F]/.test(s))return null;if(!e.parentNode)return s;const a=e.parentNode.nodeName.toLowerCase();return W.includes(a)?(/\S/.test(s)&&console.warn(`A textNode is not allowed inside '${a}'. Your text "${s}" will be ignored`),null):s}case 8:return null;case 11:return q(e.childNodes,r,t);default:return null}}function Z(e,t){const n={key:t};if(e instanceof Element){const r=e.getAttribute("class");r&&(n.className=r),[...e.attributes].forEach(o=>{switch(o.name){case"class":break;case"style":n[o.name]=X(o.value);break;case"allowfullscreen":case"allowpaymentrequest":case"async":case"autofocus":case"autoplay":case"checked":case"controls":case"default":case"defer":case"disabled":case"formnovalidate":case"hidden":case"ismap":case"itemscope":case"loop":case"multiple":case"muted":case"nomodule":case"novalidate":case"open":case"readonly":case"required":case"reversed":case"selected":case"typemustmatch":n[U[o.name]||o.name]=!0;break;default:n[U[o.name]||o.name]=o.value}})}return n}function q(e,t,n){const r=[...e].map((o,l)=>R(o,{...n,index:l,level:t+1})).filter(Boolean);return r.length?r:null}function J(e){return/[a-z]+[A-Z]+[a-z]+/.test(e)?e:e.toLowerCase()}function V(e,t={}){return typeof e=="string"?Q(e,t):e instanceof Node?R(e,t):null}function R(e,t={}){if(!e||!(e instanceof Node))return null;const{actions:n=[],index:r=0,level:o=0,randomKey:l}=t;let s=e,a=`${o}-${r}`;const u=[];return l&&o===0&&(a=`${Y()}-${a}`),Array.isArray(n)&&n.forEach(i=>{i.condition(s,a,o)&&(typeof i.pre=="function"&&(s=i.pre(s,a,o),s instanceof Node||(s=e)),typeof i.post=="function"&&u.push(i.post(s,a,o)))}),u.length?u:K(s,{key:a,level:o,...t})}function Q(e,t={}){if(!e||typeof e!="string")return null;const{includeAllNodes:n=!1,nodeOnly:r=!1,selector:o="body > *",type:l="text/html"}=t;try{const a=new DOMParser().parseFromString(e,l);if(n){const{childNodes:i}=a.body;return r?i:[...i].map(y=>R(y,t))}const u=a.querySelector(o)||a.body.childNodes[0];if(!(u instanceof Node))throw new TypeError("Error parsing input");return r?u:R(u,t)}catch{}return null}var ee=Object.defineProperty,te=(e,t,n)=>t in e?ee(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,D=(e,t,n)=>te(e,typeof t!="symbol"?t+"":t,n),H="react-inlinesvg",ne=10,c={IDLE:"idle",LOADING:"loading",LOADED:"loaded",FAILED:"failed",READY:"ready",UNSUPPORTED:"unsupported"};function re(e){return e[Math.floor(Math.random()*e.length)]}function C(){var e;return!!(typeof window<"u"&&((e=window.document)!=null&&e.createElement))}function oe(){return ce()&&typeof window<"u"&&window!==null}function ie(e,...t){const n={};for(const r in e)({}).hasOwnProperty.call(e,r)&&(t.includes(r)||(n[r]=e[r]));return n}function ae(e){const t="abcdefghijklmnopqrstuvwxyz",r=`${t}${t.toUpperCase()}1234567890`;let o="";for(let l=0;l<e;l++)o+=re(r);return o}async function G(e,t){const n=await fetch(e,t),r=n.headers.get("content-type"),[o]=(r??"").split(/ ?; ?/);if(n.status>299)throw new Error("Not found");if(!["image/svg+xml","text/plain"].some(l=>o.includes(l)))throw new Error(`Content type isn't valid: ${o}`);return n.text()}function se(e=1){return new Promise(t=>{setTimeout(t,e*1e3)})}function ce(){if(!document)return!1;const e=document.createElement("div");e.innerHTML="<svg />";const t=e.firstChild;return!!t&&t.namespaceURI==="http://www.w3.org/2000/svg"}var le=class{constructor(){D(this,"cacheApi"),D(this,"cacheStore"),D(this,"subscribers",[]),D(this,"isReady",!1),this.cacheStore=new Map;let e=H,t=!1;C()&&(e=window.REACT_INLINESVG_CACHE_NAME??H,t=!!window.REACT_INLINESVG_PERSISTENT_CACHE&&"caches"in window),t?caches.open(e).then(n=>{this.cacheApi=n}).catch(n=>{console.error(`Failed to open cache: ${n.message}`),this.cacheApi=void 0}).finally(()=>{this.isReady=!0;const n=[...this.subscribers];this.subscribers.length=0,n.forEach(r=>{try{r()}catch(o){console.error(`Error in CacheStore subscriber callback: ${o.message}`)}})}):this.isReady=!0}onReady(e){this.isReady?e():this.subscribers.push(e)}async get(e,t){var n;return await(this.cacheApi?this.fetchAndAddToPersistentCache(e,t):this.fetchAndAddToInternalCache(e,t)),((n=this.cacheStore.get(e))==null?void 0:n.content)??""}set(e,t){this.cacheStore.set(e,t)}isCached(e){var t;return((t=this.cacheStore.get(e))==null?void 0:t.status)===c.LOADED}async fetchAndAddToInternalCache(e,t){const n=this.cacheStore.get(e);if((n==null?void 0:n.status)===c.LOADING){await this.handleLoading(e,async()=>{this.cacheStore.set(e,{content:"",status:c.IDLE}),await this.fetchAndAddToInternalCache(e,t)});return}if(!(n!=null&&n.content)){this.cacheStore.set(e,{content:"",status:c.LOADING});try{const r=await G(e,t);this.cacheStore.set(e,{content:r,status:c.LOADED})}catch(r){throw this.cacheStore.set(e,{content:"",status:c.FAILED}),r}}}async fetchAndAddToPersistentCache(e,t){var o,l,s;const n=this.cacheStore.get(e);if((n==null?void 0:n.status)===c.LOADED)return;if((n==null?void 0:n.status)===c.LOADING){await this.handleLoading(e,async()=>{this.cacheStore.set(e,{content:"",status:c.IDLE}),await this.fetchAndAddToPersistentCache(e,t)});return}this.cacheStore.set(e,{content:"",status:c.LOADING});const r=await((o=this.cacheApi)==null?void 0:o.match(e));if(r){const a=await r.text();this.cacheStore.set(e,{content:a,status:c.LOADED});return}try{await((l=this.cacheApi)==null?void 0:l.add(new Request(e,t)));const a=await((s=this.cacheApi)==null?void 0:s.match(e)),u=await(a==null?void 0:a.text())??"";this.cacheStore.set(e,{content:u,status:c.LOADED})}catch(a){throw this.cacheStore.set(e,{content:"",status:c.FAILED}),a}}async handleLoading(e,t){var n;for(let r=0;r<ne;r++){if(((n=this.cacheStore.get(e))==null?void 0:n.status)!==c.LOADING)return;await se(.1)}await t()}keys(){return[...this.cacheStore.keys()]}data(){return[...this.cacheStore.entries()].map(([e,t])=>({[e]:t}))}async delete(e){this.cacheApi&&await this.cacheApi.delete(e),this.cacheStore.delete(e)}async clear(){if(this.cacheApi){const e=await this.cacheApi.keys();await Promise.allSettled(e.map(t=>this.cacheApi.delete(t)))}this.cacheStore.clear()}};function F(e){const t=d.useRef(void 0);return d.useEffect(()=>{t.current=e}),t.current}function ue(e){const{baseURL:t,content:n,description:r,handleError:o,hash:l,preProcessor:s,title:a,uniquifyIDs:u=!1}=e;try{const i=he(n,s),y=V(i,{nodeOnly:!0});if(!y||!(y instanceof SVGSVGElement))throw new Error("Could not convert the src to a DOM Node");const m=$(y,{baseURL:t,hash:l,uniquifyIDs:u});if(r){const h=m.querySelector("desc");h!=null&&h.parentNode&&h.parentNode.removeChild(h);const p=document.createElementNS("http://www.w3.org/2000/svg","desc");p.innerHTML=r,m.prepend(p)}if(typeof a<"u"){const h=m.querySelector("title");if(h!=null&&h.parentNode&&h.parentNode.removeChild(h),a){const p=document.createElementNS("http://www.w3.org/2000/svg","title");p.innerHTML=a,m.prepend(p)}}return m}catch(i){return o(i)}}function he(e,t){return t?t(e):e}function $(e,t){const{baseURL:n="",hash:r,uniquifyIDs:o}=t,l=["id","href","xlink:href","xlink:role","xlink:arcrole"],s=["href","xlink:href"],a=(u,i)=>s.includes(u)&&(i?!i.includes("#"):!1);return o&&[...e.children].forEach(u=>{var i;if((i=u.attributes)!=null&&i.length){const y=Object.values(u.attributes).map(m=>{const h=m,p=/url\((.*?)\)/.exec(m.value);return p!=null&&p[1]&&(h.value=m.value.replace(p[0],`url(${n}${p[1]}__${r})`)),h});l.forEach(m=>{const h=y.find(p=>p.name===m);h&&!a(m,h.value)&&(h.value=`${h.value}__${r}`)})}return u.children.length?$(u,t):u}),e}var b;function de(e){const{cacheRequests:t=!0,children:n=null,description:r,fetchOptions:o,innerRef:l,loader:s=null,onError:a,onLoad:u,src:i,title:y,uniqueHash:m}=e,[h,p]=d.useReducer((f,g)=>({...f,...g}),{content:"",element:null,isCached:t&&b.isCached(e.src),status:c.IDLE}),{content:O,element:T,isCached:I,status:w}=h,k=F(e),E=F(h),_=d.useRef(m??ae(8)),S=d.useRef(!1),M=d.useRef(!1),v=d.useCallback(f=>{S.current&&(p({status:f.message==="Browser does not support SVG"?c.UNSUPPORTED:c.FAILED}),a==null||a(f))},[a]),A=d.useCallback((f,g=!1)=>{S.current&&p({content:f,isCached:g,status:c.LOADED})},[]),P=d.useCallback(async()=>{const f=await G(i,o);A(f)},[o,A,i]),x=d.useCallback(()=>{try{const f=ue({...e,handleError:v,hash:_.current,content:O}),g=V(f);if(!g||!d.isValidElement(g))throw new Error("Could not convert the src to a React element");p({element:g,status:c.READY})}catch(f){v(f)}},[O,v,e]),z=d.useCallback(async()=>{const f=/^data:image\/svg[^,]*?(;base64)?,(.*)/u.exec(i);let g;if(f?g=f[1]?window.atob(f[2]):decodeURIComponent(f[2]):i.includes("<svg")&&(g=i),g){A(g);return}try{if(t){const N=await b.get(i,o);A(N,!0)}else await P()}catch(N){v(N)}},[t,P,o,v,A,i]),L=d.useCallback(async()=>{S.current&&p({content:"",element:null,isCached:!1,status:c.LOADING})},[]);d.useEffect(()=>{if(S.current=!0,!(!C()||M.current)){try{if(w===c.IDLE){if(!oe())throw new Error("Browser does not support SVG");if(!i)throw new Error("Missing src");L()}}catch(f){v(f)}return M.current=!0,()=>{S.current=!1}}},[]),d.useEffect(()=>{if(!(!C()||!k)&&k.src!==i){if(!i){v(new Error("Missing src"));return}L()}},[v,L,k,i]),d.useEffect(()=>{w===c.LOADED&&x()},[w,x]),d.useEffect(()=>{!C()||!k||k.src!==i||(k.title!==y||k.description!==r)&&x()},[r,x,k,i,y]),d.useEffect(()=>{if(E)switch(w){case c.LOADING:{E.status!==c.LOADING&&z();break}case c.LOADED:{E.status!==c.LOADED&&x();break}case c.READY:{E.status!==c.READY&&(u==null||u(i,I));break}}},[z,x,I,u,E,i,w]);const B=ie(e,"baseURL","cacheRequests","children","description","fetchOptions","innerRef","loader","onError","onLoad","preProcessor","src","title","uniqueHash","uniquifyIDs");return C()?T?d.cloneElement(T,{ref:l,...B}):[c.UNSUPPORTED,c.FAILED].includes(w)?n:s:s}function pe(e){b||(b=new le);const{loader:t}=e,[n,r]=d.useState(b.isReady);return d.useEffect(()=>{n||b.onReady(()=>{r(!0)})},[n]),n?j.createElement(de,{...e}):t}export{pe as I};
