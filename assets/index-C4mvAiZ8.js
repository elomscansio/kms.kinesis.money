const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/mock-users-BUe8tbGi.js","assets/index-B1IYvx0M.js","assets/index-D04vYMJd.css"])))=>i.map(i=>d[i]);
import{bg as s,e as i,ax as o,eg as u,eh as r}from"./index-B1IYvx0M.js";s.injectEndpoints({endpoints:t=>({switchAccount:t.mutation({queryFn:async({targetAccountId:e})=>{const c=(await o(async()=>{const{default:a}=await import("./mock-users-BUe8tbGi.js");return{default:a}},__vite__mapDeps([0,1,2]))).default.find(a=>e===a.id);if(!c)throw new Error("Failed to find account");return{data:u(c)}},invalidatesTags:["account-info"]}),getAllAccounts:t.query({queryFn:async()=>({data:(await o(async()=>{const{default:n}=await import("./mock-users-BUe8tbGi.js");return{default:n}},__vite__mapDeps([0,1,2]))).default.map(u)}),providesTags:["multi-accounts"]}),deleteOrCloseAccount:t.mutation({queryFn:()=>({data:void 0}),invalidatesTags:["multi-accounts"]}),canCloseAccount:t.query({queryFn:()=>({data:!0})})}),overrideExisting:i.dataProvider==="mock"});const l=r,{usePrefetch:_,useSwitchAccountMutation:A,useGetAllAccountsQuery:f,useDeleteOrCloseAccountMutation:m,useCanCloseAccountQuery:v}=l;export{_ as a,f as b,v as c,m as d,A as u};
