var P=Object.defineProperty;var A=(t,e,a)=>e in t?P(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a;var g=(t,e,a)=>A(t,typeof e!="symbol"?e+"":e,a);import{bg as M,e as v,ax as f,b1 as c,aw as T,fq as q}from"./index-B1IYvx0M.js";import{S as D}from"./socket-client-ClPHFSdE.js";class b extends D{subscribeToKinesisPayChanges(){return this.subscribe({path:"/notifications/merchant/payment"})}unsubscribe(){this.disconnect()}isConnected(){return this.connected}}var y=(t=>(t.started="statusCaptureStarted",t.created="created",t.expired="expired",t.accepted="accepted",t.rejected="rejected",t.cancelled="cancelled",t.refund="refund",t.underProcess="underProcess",t.processed="processed",t))(y||{});const d=class d{static getInstance(){return d.kinesisPaySocketClient}};g(d,"kinesisPaySocketClient",new b);let m=d;const i={globalPaymentId:"test",globalMerchantId:"RFTYTRWEWJ",merchantBusinessName:"Test Business Name",status:y.created,amount:100.98,amountCurrency:"GBP",paymentKauAmount:1.12015,paymentKagAmount:1.59802,usdConvertedAmount:2339.13,expiryAt:new Date("2022-09-09T03:06:26.583Z").toISOString(),createdAt:new Date("2022-09-09T02:56:26.792Z").toISOString(),updatedAt:new Date("2022-09-09T02:59:26.592Z").toISOString()};M.injectEndpoints({endpoints:t=>({getMerchantProfileById:t.query({queryFn:({merchantId:e})=>{let a;return e==="RFTYTRXXXX"&&(a={globalMerchantId:"RFTYTRXXXX",businessName:"Test Business Name",website:"www.google.com",industry:"Financial services",address:"",suspended:!1,preferredCurrency:T.AUD}),e==="RFTYTRYYYY"&&(a={globalMerchantId:"RFTYTRYYYY",businessName:"Test Business Name Suspended",website:"www.google.com",industry:"Financial services",address:"",suspended:!0,preferredCurrency:T.AUD}),a?{data:a}:{error:{status:404,data:{message:"Unable to retrieve merchant profile."}}}},providesTags:["merchant-profile"]}),saveMerchantProfile:t.mutation({queryFn:()=>({data:void 0}),invalidatesTags:["merchant-profile"]}),loadMerchantSummary:t.query({queryFn:async()=>({data:(await f(async()=>{const{default:a}=await import("./mock-merchant-summary-DDQ8OUNt.js");return{default:a}},[])).default}),providesTags:["merchant-summary"]}),updateMerchantProfile:t.mutation({queryFn:()=>({data:void 0}),invalidatesTags:["merchant-profile"]}),loadMerchantPayment:t.query({queryFn:({globalPaymentId:e})=>{const a=new Date;return e==="aaa"||e==="aaaa"?{data:{...i,globalPaymentId:e,expiryAt:new Date(a.getTime()+6*60*1e3).toISOString(),createdAt:new Date(a.getTime()-4*60*1e3).toISOString()}}:e==="bbb"?{data:{...i,globalPaymentId:e,amount:1005.01,paymentKauAmount:10.12015,paymentKagAmount:10.59802,expiryAt:new Date(a.getTime()+6*60*1e3).toISOString(),createdAt:new Date(a.getTime()-4*60*1e3).toISOString()}}:e==="ccc"?{data:{...i,globalPaymentId:e,status:y.processed}}:e==="ddd"?{data:{...i,globalPaymentId:e}}:{data:null}},providesTags:["merchant-payment"],async onCacheEntryAdded({listenUpdates:e},{cacheDataLoaded:a,cacheEntryRemoved:n,updateCachedData:s}){const{data:o}=await a;if(!o||!e)return await n;const r=m.getInstance(),h=r.subscribeToKinesisPayChanges().subscribe({next:({data:{paymentId:l,currentStep:p}})=>{s(u=>{if(u&&u.globalPaymentId===l)return u.status=p,u})}});await n,h.unsubscribe(),r.unsubscribe()}}),sendMerchantPayment:t.mutation({queryFn:({globalPaymentId:e,mfaToken:a})=>e==="aaaa"?{error:{status:400,data:{message:"The buyer as merchant not supported."}}}:a==="111111"?{error:{status:401,data:{message:"Incorrect MFA token.",metadata:{reachedLimit:!0,verificationAttempts:5}}}}:{data:void 0},invalidatesTags:["merchant-payment","transactions","merchant-summary"]}),validateMerchantProfile:t.query({queryFn:e=>({data:e.businessName!=="error"})}),validateMfaRequirement:t.query({queryFn:({amount:e})=>({data:Number(e)>10})}),sendPaymentByMerchant:t.mutation({queryFn:e=>{const a=new Date;return{data:{merchantBusinessName:"Test KPay Merchant",globalPaymentId:"KPTPUG53PF79",globalMerchantId:e.globalMerchantId,status:"accepted",paymentKauAmount:new c(e.amount).div(103).round(5).toNumber(),paymentKagAmount:new c(e.amount).div(52).round(5).toNumber(),paymentAmount:e.currencyCode==="KAU"?e.amount/103:e.amount/52,paymentFee:2e-5,paymentCurrency:e.currencyCode,amount:e.amount,amountCurrency:"AUD",usdConvertedAmount:e.amount*1.3,type:"ephemeral",createdAt:new Date(a.getTime()-4*60*1e3).toISOString(),updatedAt:new Date(a.getTime()-4*60*1e3).toISOString(),expiryAt:new Date(a.getTime()+6*60*1e3).toISOString()}}},invalidatesTags:["merchant-payment","transactions","merchant-summary"]}),loadOrders:t.query({queryFn:async({merchantId:e,page:a,pageSize:n})=>{const{default:s}=await f(async()=>{const{default:r}=await import("./mock-merchant-orders-CCmvN5kG.js");return{default:r}},[]),o=s.map(r=>({...r,expiryAt:new Date(r.expiryAt).toISOString(),createdAt:new Date(r.createdAt).toISOString(),updatedAt:new Date(r.updatedAt).toISOString(),amountCurrency:r.amountCurrency,paymentCurrency:r.paymentCurrency,status:r.status}));return e!=="RFTYTRWEWJ"?{data:[]}:!a||!n?{data:o}:{data:o.slice(0,a>3?n-1:n).map(r=>({...r,date:new Date().toString()}))}},providesTags:["transactions"]}),getConvertedAmount:t.query({queryFn:({amount:e})=>({data:{kauAmount:new c(e).div(103).round(5).toNumber(),kagAmount:new c(e).div(52).round(5).toNumber()}})}),getMinAmount:t.query({queryFn:()=>({data:{KAU:.03,KAG:.03}})}),loadMerchantCurrencies:t.query({queryFn:async()=>({data:(await f(async()=>{const{default:a}=await import("./mock-currencies-DE379c_M.js");return{default:a}},[])).default})})}),overrideExisting:v.dataProvider==="mock"});const C=M.injectEndpoints({endpoints:t=>({getMerchantProfileById:t.query({query:({merchantId:e})=>({url:`merchants/merchant${e?`?globalMerchantId=${e}`:""}`,method:"GET"}),providesTags:["merchant-profile","account-info"]}),saveMerchantProfile:t.mutation({query:e=>({url:"merchants/merchant",method:"POST",body:e}),invalidatesTags:["merchant-profile"]}),loadMerchantSummary:t.query({query:e=>({url:`merchants/merchant/payment/summary?globalMerchantId=${e}`,method:"GET"}),providesTags:["merchant-summary","account-info"]}),updateMerchantProfile:t.mutation({query:e=>({url:`merchants/merchant/${e.globalMerchantId}`,method:"PATCH",body:e}),invalidatesTags:["merchant-profile"]}),sendPaymentByMerchant:t.mutation({query:e=>({url:"merchants/payment/buyer",body:e,method:"POST"}),invalidatesTags:["merchant-payment","transactions","merchant-summary"]}),loadMerchantPayment:t.query({query:({globalPaymentId:e})=>({url:`merchants/payment/id/${e}`,method:"GET"}),providesTags:["merchant-payment","account-info"],onQueryStarted:async(e,{queryFulfilled:a})=>{const{formatMessage:n}=q(),{data:s}=await a;if(!s)throw new Error(n({id:"W21cxm",defaultMessage:[{type:0,value:"Invalid payment ID"}]}));if(s.status!==y.created)throw new Error(n({id:"7jHYcz",defaultMessage:[{type:0,value:"Payment ID already used"}]}));const o=new Date,r=new Date(s.expiryAt);if(o.getTime()>=r.getTime())throw new Error(n({id:"wsDPe1",defaultMessage:[{type:0,value:"Payment ID has expired"}]}))},async onCacheEntryAdded({listenUpdates:e},{cacheDataLoaded:a,cacheEntryRemoved:n,updateCachedData:s}){const{data:o}=await a;if(!o||!e)return await n;const r=m.getInstance(),h=r.subscribeToKinesisPayChanges().subscribe({next:({data:{paymentId:l,currentStep:p}})=>{s(u=>{if(u&&u.globalPaymentId===l)return u.status=p,u})}});await n,h.unsubscribe(),r.unsubscribe()}}),sendMerchantPayment:t.mutation({query:e=>({url:"merchants/payment/pay",method:"POST",body:e}),invalidatesTags:["merchant-payment","transactions","merchant-summary","account-info"]}),validateMerchantProfile:t.query({query:e=>({url:`merchants/merchant/validation/businessName/${encodeURI(e.businessName??"")}`,method:"GET"})}),validateMfaRequirement:t.query({query:({amount:e,currency:a})=>({url:`merchants/payment/mfa?amount=${e}&currency=${a}`,method:"GET"})}),loadOrders:t.query({query:({merchantId:e,page:a,pageSize:n})=>({url:`merchants/payment?globalMerchantId=${e}&limit=${n??10}&offset=${(a?a-1:0)*(n??10)}`,method:"GET"}),providesTags:["transactions","account-info"]}),getConvertedAmount:t.query({query:({amount:e,currency:a})=>({url:`merchants/payment/convert?currency=${a}&amount=${e}`,method:"GET"})}),getMinAmount:t.query({query:()=>({url:"merchants/payment/min-amount-currencies"})}),loadMerchantCurrencies:t.query({query:()=>({url:"market-data-api/fx-rate/symbols",method:"GET"})})}),overrideExisting:v.dataProvider==="api"}),S=C,{usePrefetch:F,useGetMinAmountQuery:O,useLazyGetConvertedAmountQuery:N,useSendPaymentByMerchantMutation:Y,useGetMerchantProfileByIdQuery:k,useLazyValidateMfaRequirementQuery:x,useLazyValidateMerchantProfileQuery:G,useSendMerchantPaymentMutation:B,useUpdateMerchantProfileMutation:K,useSaveMerchantProfileMutation:L,useLazyLoadMerchantPaymentQuery:$,useLoadMerchantPaymentQuery:Q,useLoadOrdersQuery:R,useLoadMerchantCurrenciesQuery:U,useLoadMerchantSummaryQuery:j}=S;export{y as A,F as a,R as b,j as c,U as d,K as e,G as f,L as g,x as h,Q as i,$ as j,B as k,N as l,O as m,Y as n,k as u};
